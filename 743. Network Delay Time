743. Network Delay Time


import java.util.*;

class Solution {
    public int networkDelayTime(int[][] times, int n, int k) {
        int[] ar = new int[n + 1];
        Arrays.fill(ar, Integer.MAX_VALUE);
        ar[k] = 0;
        List<List<int[]>> al = new ArrayList<>();
        for (int i = 0; i <= n; i++)
            al.add(new ArrayList<>());
        for (int[] temp : times) {
            int a = temp[0];
            int b = temp[1];
            int c = temp[2];
            al.get(a).add(new int[]{b, c});
        }
        PriorityQueue<int[]> que = new PriorityQueue<>((a, b) -> a[0] - b[0]);
        que.add(new int[]{0, k});

        while (!que.isEmpty()) {
            int[] a = que.poll();
            int distance = a[0];
            int node = a[1];
            if (distance > ar[node])
                continue;
    for (int[] neighbor : al.get(node)) {
       int nextNode = neighbor[0];
        int edgeWeight = neighbor[1];
        int newDist = distance + edgeWeight;

      if (newDist < ar[nextNode]) {
        ar[nextNode] = newDist;
    que.add(new int[]{newDist, nextNode});
            }
        }        }

     int max = 0;
    for (int i = 1; i <= n; i++) {
                 if (ar[i] == Integer.MAX_VALUE)
            return -1;
     max = Math.max(ar[i], max);
        }
        return max;
    }
}
